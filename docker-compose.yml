version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: pickleballloveall-db
    environment:
      POSTGRES_DB: pickleballloveall
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - pickleballloveall-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pickleballloveall-backend
    environment:
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/pickleballloveall
      JWT_SECRET: your-super-secret-jwt-key-for-local-development-min-32-chars
      NODE_ENV: development
      PORT: 3000
      CORS_ORIGIN: http://localhost:5173,http://localhost:80
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pickleballloveall-network
    volumes:
      - ./backend/uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pickleballloveall-frontend
    environment:
      VITE_API_URL: http://localhost:3000
      VITE_ENVIRONMENT: development
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - pickleballloveall-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  pickleballloveall-network:
    driver: bridge
